Data structure Wikipedia Data structure From Wikipedia free encyclopedia Jump navigation Jump search Particular way storing organizing data in computer Not be confused with data type information on Wikipedia s data structure see Wikipedia Administration Data structure development This article needs additional citations verification Please help improve this article by adding citations reliable sources Unsourced material may be challenged removed Find sources Data structure news newspapers books scholar JSTOR January Learn remove this template message data structure known as hash table In computer science data structure data organization management storage format that enables efficient access modification More precisely data structure collection data values relationships among them functions operations that can be applied data Contents Usage Implementation Examples Language support See also References Bibliography Further reading External links Usage edit Data structures serve as basis abstract data types ADT ADT defines logical form data type data structure implements physical form data type Different types data structures are suited different kinds applications some are highly specialized specific tasks example relational databases commonly use B tree indexes data retrieval while compiler implementations usually use hash tables look up identifiers Data structures provide means manage large amounts data efficiently uses such as large databases internet indexing services Usually efficient data structures are key designing efficient algorithms Some formal design methods programming languages emphasize data structures rather than algorithms as key organizing factor in software design Data structures can be used organize storage retrieval information stored in both main memory secondary memory Implementation edit Data structures are generally based on ability computer fetch store data at any place in its memory specified by pointer bit string representing memory address that can be itself stored in memory manipulated by program Thus array record data structures are based on computing addresses data items with arithmetic operations while linked data structures are based on storing addresses data items within structure itself implementation data structure usually requires writing set procedures that create manipulate instances that structure efficiency data structure cannot be analyzed separately from those operations This observation motivates theoretical concept an abstract data type data structure that defined indirectly by operations that may be performed on it mathematical properties those operations including space time cost citation needed Examples edit Main article List data structures are numerous types data structures generally built upon simpler primitive data types An array number elements in specific order typically all same type depending on language individual elements may either all be forced be same type may be almost any type Elements are accessed using an integer index specify which element required Typical implementations allocate contiguous memory words elements arrays but this not always necessity Arrays may be fixed length resizable linked list also just called list linear collection data elements any type called nodes each node has itself value points next node in linked list principal advantage linked list over an array that values can always be efficiently inserted removed without relocating rest list Certain other operations such as random access certain element are however slower on lists than on arrays record also called tuple struct an aggregate data structure record value that contains other values typically in fixed number sequence typically indexed by names elements records are usually called fields members union data structure that specifies which number permitted primitive types may be stored in its instances e g float long integer Contrast with record which could be defined contain float an integer whereas in union only one value at time Enough space allocated contain widest member datatype tagged union also called variant variant record discriminated union disjoint union contains an additional field indicating its current type enhanced type safety An object data structure that contains data fields like record does as well as various methods which operate on data contents An object an in memory instance class from taxonomy In context object oriented programming records are known as plain old data structures distinguish them from objects In addition graphs binary trees are other commonly used data structures Language support edit Most assembly languages some low level languages such as BCPL Basic Combined Programming Language lack built in support data structures On other hand many high level programming languages some higher level assembly languages such as MASM have special syntax other built in support certain data structures such as records arrays example C direct descendant BCPL Pascal languages support structs records respectively in addition vectors one dimensional arrays multi dimensional arrays Most programming languages feature some sort library mechanism that allows data structure implementations be reused by different programs Modern languages usually come with standard libraries that implement most common data structures Examples are C Standard Template Library Java Collections Framework Microsoft NET Framework Modern languages also generally support modular programming separation between interface library module its implementation Some provide opaque data types that allow clients hide implementation details Object oriented programming languages such as C Java Smalltalk typically use classes this purpose Many known data structures have concurrent versions which allow multiple computing threads access single concrete instance data structure simultaneously See also edit Book Data structures Abstract data type Concurrent data structure Data model Dynamization Linked data structure List data structures Persistent data structure Plain old data structure Succinct data structure References edit Cormen Thomas H Leiserson Charles E Rivest Ronald L Stein Clifford Introduction Algorithms Third Edition rd ed MIT Press ISBN Black Paul E December data structure In Pieterse Vreda Black Paul E eds Dictionary Algorithms Data Structures online National Institute Standards Technology Retrieved Data structure Encyclopaedia Britannica April Retrieved Wegner Peter Reilly Edwin D Encyclopedia Computer Science Chichester UK John Wiley Sons pp ISBN Abstract Data Types Virginia Tech CS Data Structures Algorithms Gavin Powell Chapter Building Fast Performing Database Models Beginning Database Design Wrox Publishing ISBN Applications Hash Table University Regina CS Lab Hash Table data big fit into main memory homes sice indiana edu Seymour Lipschutz Data structures Revised first ed New Delhi India McGraw Hill Education ISBN OCLC Walter E Brown September C Language Note POD Types Fermi National Accelerator Laboratory Archived from original on Retrieved December GNU C Manual Free Software Foundation Retrieved Free Pascal Reference Guide Free Pascal Retrieved Mark Moir Nir Shavit Concurrent Data Structures PDF cs tau ac il Bibliography edit Peter Brass Advanced Data Structures Cambridge University Press ISBN Donald Knuth Art Computer Programming vol Addison Wesley rd edition ISBN Dinesh Mehta Sartaj Sahni Handbook Data Structures Applications Chapman Hall CRC Press ISBN Niklaus Wirth Algorithms Data Structures Prentice Hall ISBN Further reading edit Alfred Aho John Hopcroft Jeffrey Ullman Data Structures Algorithms Addison Wesley ISBN G H Gonnet R Baeza Yates Handbook Algorithms Data Structures in Pascal C second edition Addison Wesley ISBN Ellis Horowitz Sartaj Sahni Fundamentals Data Structures in Pascal Computer Science Press ISBN External links edit Data structureat Wikipedia s sister projects Definitions from Wiktionary Media from Wikimedia Commons Quotations from Wikiquote Texts from Wikisource Textbooks from Wikibooks Resources from Wikiversity Descriptions from Dictionary Algorithms Data Structures Data structures course An Examination Data Structures from NET perspective Schaffer C Data Structures Algorithm Analysis v t e Data structures Types Collection Container Abstract Associative array Multimap List Stack Queue Double ended queue Priority queue Double ended priority queue Set Multiset Disjoint set Arrays Bit array Circular buffer Dynamic array Hash table Hashed array tree Sparse matrix Linked Association list Linked list Skip list Unrolled linked list XOR linked list Trees B tree Binary search tree AA tree AVL tree Red black tree Self balancing tree Splay tree Heap Binary heap Binomial heap Fibonacci heap R tree R tree R tree Hilbert R tree Trie Hash tree Graphs Binary decision diagram Directed acyclic graph Directed acyclic word graph List data structures v t e Data types Uninterpreted Bit Byte Trit Tryte Word Bit array Numeric Arbitrary precision bignum Complex Decimal Fixed point Floating point Double precision Extended precision Long double Octuple precision Quadruple precision Single precision Reduced precision Minifloat Half precision bfloat Integer signedness Interval Rational Pointer Address physical virtual Reference Text Character String null terminated Composite Algebraic data type generalized Array Associative array Class Dependent Equality Inductive Intersection List Object metaobject Option type Product Record Struct Refinement Set Union tagged Other Boolean Bottom type Collection Enumerated type Exception Function type Opaque data type Recursive data type Semaphore Stream Top type Type class Unit type Void Related topics Abstract data type Data structure Generic Kind metaclass Parametric polymorphism Primitive data type Protocol interface Subtyping Type constructor Type conversion Type system Type theory See also platform dependent independent units information v t e Data model Main Architecture Modeling Structure Schemas Conceptual Logical Physical Types Database Data structure diagram Entity relationship model enhanced Geographic Generic Semantic Related models Data flow diagram Information model Object model Object role modeling Unified Modeling Language See also Database design Business process modeling Core architecture data model Enterprise modelling Function model Process modeling XML schema Data Format Description Language Authority control GND LCCN sh NDL Retrieved from https en wikipedia org w index php title Data structure oldid Categories Data structures Hidden categories Articles with short description Articles needing additional references from January All articles needing additional references All articles with unsourced statements Articles with unsourced statements from January Wikipedia articles with GND identifiers Wikipedia articles with LCCN identifiers Wikipedia articles with NDL identifiers Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Featured content Current events Random article Donate Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page In other projects Wikimedia Commons Wikibooks Print export Create book Download as PDF Printable version Languages Afrikaans Asturianu B n l m g Bosanski Catal e tina Dansk Deutsch Eesti Espa ol Esperanto Fran ais Galego Hrvatski Bahasa Indonesia Interlingua slenska Italiano Latina Latvie u Magyar Bahasa Melayu Nederlands Norsk Polski Portugu s Rom n Scots Shqip Simple English Sloven ina Sloven ina srpski Srpskohrvatski Suomi Svenska Tagalog T rk e Ti ng Vi t Edit links This page was last edited on November at UTC Text available under Creative Commons Attribution ShareAlike License additional terms may apply By using this site agree Terms Use Privacy Policy Wikipedia registered trademark Wikimedia Foundation Inc non profit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Statistics Cookie statement Mobile view