Database Wikipedia Database From Wikipedia free encyclopedia Jump navigation Jump search topical guide this subject see Outline databases An SQL select statement its result database an organized collection data generally stored accessed electronically from computer system databases are more complex they are often developed using formal design modeling techniques database management system DBMS software that interacts with end users applications database itself capture analyze data DBMS software additionally encompasses core facilities provided administer database sum total database DBMS associated applications can be referred as database system Often term database also used loosely refer any DBMS database system an application associated with database Computer scientists may classify database management systems according database models that they support Relational databases became dominant in s These model data as rows columns in series tables vast majority use SQL writing querying data In s non relational databases became popular referred as NoSQL they use different query languages Contents Terminology overview History s navigational DBMS s relational DBMS Integrated approach Late s SQL DBMS s on desktop s object oriented s NoSQL NewSQL Use cases Classification Database interaction Database management system Application Application Program Interface Database languages Storage Materialized views Replication Security Transactions concurrency Migration Building maintaining tuning Backup restore Static analysis Miscellaneous features Design modeling Models External conceptual internal views Research See also Notes References Sources Further reading External links Terminology overview Formally database refers set related data way it organized Access this data usually provided by database management system DBMS consisting an integrated set computer software that allows users interact with one more databases provides access all data contained in database although restrictions may exist that limit access particular data DBMS provides various functions that allow entry storage retrieval large quantities information provides ways manage that information organized close relationship between them term database often used casually refer both database DBMS used manipulate it Outside world professional information technology term database often used refer any collection related data such as spreadsheet card index as size usage requirements typically necessitate use database management system Existing DBMSs provide various functions that allow management database its data which can be classified into four main functional groups Data definition Creation modification removal definitions that define organization data Update Insertion modification deletion actual data Retrieval Providing information in form directly usable further processing by other applications retrieved data may be made available in form basically same as it stored in database in new form obtained by altering combining existing data from database Administration Registering monitoring users enforcing data security monitoring performance maintaining data integrity dealing with concurrency control recovering information that has been corrupted by some event such as an unexpected system failure Both database its DBMS conform principles particular database model Database system refers collectively database model database management system database Physically database servers are dedicated computers that hold actual databases run only DBMS related software Database servers are usually multiprocessor computers with generous memory RAID disk arrays used stable storage RAID used recovery data if any disks fail Hardware database accelerators connected one more servers via high speed channel are also used in large volume transaction processing environments DBMSs are found at heart most database applications DBMSs may be built around custom multitasking kernel with built in networking support but modern DBMSs typically rely on standard operating system provide these functions Since DBMSs comprise significant market computer storage vendors often take into account DBMS requirements in own development plans Databases DBMSs can be categorized according database model s that they support such as relational XML type s computer they run on from server cluster mobile phone query language s used access database such as SQL XQuery internal engineering which affects performance scalability resilience security History sizes capabilities performance databases respective DBMSs have grown in orders magnitude These performance increases were enabled by technology progress in areas processors computer memory computer storage computer networks development database technology can be divided into three eras based on data model structure navigational SQL relational post relational two main early navigational data models were hierarchical model CODASYL model network model relational model first proposed in by Edgar F Codd departed from this tradition by insisting that applications should search data by content rather than by following links relational model employs sets ledger style tables each used different type entity Only in mid s did computing hardware become powerful enough allow wide deployment relational systems DBMSs plus applications By early s however relational systems dominated in all large scale data processing applications as update they remain dominant IBM DB Oracle MySQL Microsoft SQL Server are most searched DBMS dominant database language standardised SQL relational model has influenced database languages other data models citation needed Object databases were developed in s overcome inconvenience object relational impedance mismatch which led coining term post relational also development hybrid object relational databases next generation post relational databases in late s became known as NoSQL databases introducing fast key value stores document oriented databases competing next generation known as NewSQL databases attempted new implementations that retained relational SQL model while aiming match high performance NoSQL compared commercially available relational DBMSs s navigational DBMS Further information Navigational database Basic structure navigational CODASYL database model introduction term database coincided with availability direct access storage disks drums from mid s onwards term represented contrast with tape based systems past allowing shared interactive use rather than daily batch processing Oxford English Dictionary cites report by System Development Corporation California as first use term data base in specific technical sense As computers grew in speed capability number general purpose database systems emerged by mid s number such systems had come into commercial use Interest in standard began grow Charles Bachman author one such product Integrated Data Store IDS founded Database Task Group within CODASYL group responsible creation standardization COBOL In Database Task Group delivered standard which generally became known as CODASYL approach soon number commercial products based on this approach entered market CODASYL approach relied on manual navigation linked data set which was formed into large network Applications could find records by one three methods Use primary key known as CALC key typically implemented by hashing Navigating relationships called sets from one record another Scanning all records in sequential order Later systems added B trees provide alternate access paths Many CODASYL databases also added very straightforward query language However in final tally CODASYL was very complex required significant training effort produce useful applications IBM also had own DBMS in known as Information Management System IMS IMS was development software written Apollo program on System IMS was generally similar in concept CODASYL but used strict hierarchy its model data navigation instead CODASYL s network model Both concepts later became known as navigational databases due way data was accessed Bachman s Turing Award presentation was Programmer as Navigator IMS classified by IBM as hierarchical database IDMS Cincom Systems TOTAL database are classified as network databases IMS remains in use as update s relational DBMS Edgar F Codd worked at IBM in San Jose California in one offshoot offices that was primarily involved in development hard disk systems He was unhappy with navigational model CODASYL approach notably lack search facility In he wrote number papers that outlined new approach database construction that eventually culminated in groundbreaking Relational Model Data Large Shared Data Banks In this paper he described new system storing working with large databases Instead records being stored in some sort linked list free form records as in CODASYL Codd s idea was use table fixed length records with each table used different type entity linked list system would be very inefficient storing sparse databases some data any one record could be left empty relational model solved this by splitting data into series normalized tables relations with optional elements being moved out main table they would take up room only if needed Data may be freely inserted deleted edited in these tables with DBMS doing whatever maintenance needed present table view application user In relational model records are linked using virtual keys not stored in database but defined as needed between data contained in records relational model also allowed content database evolve without constant rewriting links pointers relational part comes from entities referencing other entities in known as one many relationship like traditional hierarchical model many many relationship like navigational network model Thus relational model can express both hierarchical navigational models as well as its native tabular model allowing pure combined modeling in terms these three models as application requires instance common use database system track information about users name login information various addresses phone numbers In navigational approach all this data would be placed in single record unused items would simply not be placed in database In relational approach data would be normalized into user table an address table phone number table instance Records would be created in these optional tables only if address phone numbers were actually provided Linking information back together key this system In relational model some bit information was used as key uniquely defining particular record information was being collected about user information stored in optional tables would be found by searching this key instance if login name user unique addresses phone numbers that user would be recorded with login name as its key This simple re linking related data back into single collection something that traditional computer languages are not designed Just as navigational approach would require programs loop in order collect records relational approach would require loops collect information about any one record Codd s suggestions was set oriented language that would later spawn ubiquitous SQL Using branch mathematics known as tuple calculus he demonstrated that such system could support all operations normal databases inserting updating etc as well as providing simple system finding returning sets data in single operation Codd s paper was picked up by two people at Berkeley Eugene Wong Michael Stonebraker They started project known as INGRES using funding that had already been allocated geographical database project student programmers produce code Beginning in INGRES delivered its first test products which were generally ready widespread use in INGRES was similar System R in number ways including use language data access known as QUEL Over time INGRES moved emerging SQL standard IBM itself did one test implementation relational model PRTV production one Business System both now discontinued Honeywell wrote MRDS Multics now are two new implementations Alphora Dataphor Rel Most other DBMS implementations usually called relational are actually SQL DBMSs In University Michigan began development MICRO Information Management System based on D L Childs Set Theoretic Data model MICRO was used manage very large data sets by US Department Labor U S Environmental Protection Agency researchers from University Alberta University Michigan Wayne State University It ran on IBM mainframe computers using Michigan Terminal System system remained in production until Integrated approach Main article Database machine In s s attempts were made build database systems with integrated hardware software underlying philosophy was that such integration would provide higher performance at lower cost Examples were IBM System early offering Teradata Britton Lee Inc database machine Another approach hardware support database management was ICL s CAFS accelerator hardware disk controller with programmable search capabilities In long term these efforts were generally unsuccessful specialized database machines could not keep pace with rapid development progress general purpose computers Thus most database systems nowadays are software systems running on general purpose hardware using general purpose computer data storage However this idea still pursued certain applications by some companies like Netezza Oracle Exadata Late s SQL DBMS IBM started working on prototype system loosely based on Codd s concepts as System R in early s first version was ready in work then started on multi table systems in which data could be split so that all data record some which optional did not have be stored in single large chunk Subsequent multi user versions were tested by customers in by which time standardized query language SQL citation needed had been added Codd s ideas were establishing themselves as both workable superior CODASYL pushing IBM develop true production version System R known as SQL DS later Database DB Larry Ellison s Oracle Database more simply Oracle started from different chain based on IBM s papers on System R Though Oracle V implementations were completed in it wasn t until Oracle Version Ellison beat IBM market in Stonebraker went on apply lessons from INGRES develop new database Postgres which now known as PostgreSQL PostgreSQL often used global mission critical applications org info domain name registries use it as primary data store as do many large companies financial institutions In Sweden Codd s paper was also read Mimer SQL was developed from mid s at Uppsala University In this project was consolidated into an independent enterprise Another data model entity relationship model emerged in gained popularity database design as it emphasized more familiar description than earlier relational model Later on entity relationship constructs were retrofitted as data modeling construct relational model difference between two have become irrelevant citation needed s on desktop s ushered in age desktop computing new computers empowered users with spreadsheets like Lotus database software like dBASE dBASE product was lightweight easy any computer user understand out box C Wayne Ratliff creator dBASE stated dBASE was different from programs like BASIC C FORTRAN COBOL in that lot dirty work had already been done data manipulation done by dBASE instead by user so user can concentrate on he doing rather than having mess with dirty details opening reading closing files managing space allocation dBASE was one top selling software titles in s early s s object oriented s along with rise in object oriented programming saw growth in data in various databases were handled Programmers designers began treat data in databases as objects That say that if person s data were in database that person s attributes such as address phone number age were now considered belong that person instead being extraneous data This allows relations between data be relations objects attributes not individual fields term object relational impedance mismatch described inconvenience translating between programmed objects database tables Object databases object relational databases attempt solve this problem by providing an object oriented language sometimes as extensions SQL that programmers can use as alternative purely relational SQL On programming side libraries known as object relational mappings ORMs attempt solve same problem s NoSQL NewSQL Main articles NoSQL NewSQL XML databases are type structured document oriented database that allows querying based on XML document attributes XML databases are mostly used in applications data conveniently viewed as collection documents with structure that can vary from very flexible highly rigid examples include scientific articles patents tax filings personnel records NoSQL databases are often very fast do not require fixed table schemas avoid join operations by storing denormalized data are designed scale horizontally In recent years has been strong demand massively distributed databases with high partition tolerance but according CAP theorem it impossible distributed system simultaneously provide consistency availability partition tolerance guarantees distributed system can satisfy any two these guarantees at same time but not all three that reason many NoSQL databases are using called eventual consistency provide both availability partition tolerance guarantees with reduced level data consistency NewSQL class modern relational databases that aims provide same scalable performance NoSQL systems online transaction processing read write workloads while still using SQL maintaining ACID guarantees traditional database system Use cases This section does not cite any sources Please help improve this section by adding citations reliable sources Unsourced material may be challenged removed Find sources Database news newspapers books scholar JSTOR March Learn remove this template message Databases are used support internal operations organizations underpin online interactions with customers suppliers see Enterprise software Databases are used hold administrative information more specialized data such as engineering data economic models Examples include computerized library systems flight reservation systems computerized parts inventory systems many content management systems that store websites as collections webpages in database Classification One way classify databases involves type contents example bibliographic document text statistical multimedia objects Another way by application area example accounting music compositions movies banking manufacturing insurance third way by some technical aspect such as database structure interface type This section lists few adjectives used characterize different kinds databases An in memory database database that primarily resides in main memory but typically backed up by non volatile computer data storage Main memory databases are faster than disk databases so are often used response time critical such as in telecommunications network equipment An active database includes an event driven architecture which can respond conditions both inside outside database Possible uses include security monitoring alerting statistics gathering authorization Many databases provide active database features in form database triggers cloud database relies on cloud technology Both database most its DBMS reside remotely in cloud while its applications are both developed by programmers later maintained used by end users through web browser Open APIs Data warehouses archive data from operational databases often from external sources such as market research firms warehouse becomes central source data use by managers other end users may not have access operational data example sales data might be aggregated weekly totals converted from internal product codes use UPCs so that they can be compared with ACNielsen data Some basic essential components data warehousing include extracting analyzing mining data transforming loading managing data so as make them available further use deductive database combines logic programming with relational database distributed database one in which both data DBMS span multiple computers document oriented database designed storing retrieving managing document oriented semi structured information Document oriented databases are one main categories NoSQL databases An embedded database system DBMS which tightly integrated with an application software that requires access stored data in such way that DBMS hidden from application s end users requires little no ongoing maintenance End user databases consist data developed by individual end users Examples these are collections documents spreadsheets presentations multimedia other files Several products exist support such databases Some them are much simpler than full fledged DBMSs with more elementary DBMS functionality federated database system comprises several distinct databases each with its own DBMS It handled as single database by federated database management system FDBMS which transparently integrates multiple autonomous DBMSs possibly different types in which case it would also be heterogeneous database system provides them with an integrated conceptual view Sometimes term multi database used as synonym federated database though it may refer less integrated e g without an FDBMS managed integrated schema group databases that cooperate in single application In this case typically middleware used distribution which typically includes an atomic commit protocol ACP e g two phase commit protocol allow distributed global transactions across participating databases graph database kind NoSQL database that uses graph structures with nodes edges properties represent store information General graph databases that can store any graph are distinct from specialized graph databases such as triplestores network databases An array DBMS kind NoSQL DBMS that allows modeling storage retrieval usually large multi dimensional arrays such as satellite images climate simulation output In hypertext hypermedia database any word piece text representing an object e g another piece text an article picture film can be hyperlinked that object Hypertext databases are particularly useful organizing large amounts disparate information example they are useful organizing online encyclopedias users can conveniently jump around text World Wide Web thus large distributed hypertext database knowledge base abbreviated KB kb special kind database knowledge management providing means computerized collection organization retrieval knowledge Also collection data representing problems with solutions related experiences mobile database can be carried on synchronized from mobile computing device Operational databases store detailed data about operations an organization They typically process relatively high volumes updates using transactions Examples include customer databases that record contact credit demographic information about business s customers personnel databases that hold information such as salary benefits skills data about employees enterprise resource planning systems that record details about product components parts inventory financial databases that keep track organization s money accounting financial dealings parallel database seeks improve performance through parallelization tasks such as loading data building indexes evaluating queries major parallel DBMS architectures which are induced by underlying hardware architecture are Shared memory architecture multiple processors share main memory space as well as other data storage Shared disk architecture each processing unit typically consisting multiple processors has its own main memory but all units share other storage Shared nothing architecture each processing unit has its own main memory other storage Probabilistic databases employ fuzzy logic draw inferences from imprecise data Real time databases process transactions fast enough result come back be acted on right away spatial database can store data with multidimensional features queries on such data include location based queries like closest hotel in my area temporal database has built in time aspects example temporal data model temporal version SQL More specifically temporal aspects usually include valid time transaction time terminology oriented database builds upon an object oriented database often customized specific field An unstructured data database intended store in manageable protected way diverse objects that do not fit naturally conveniently in common databases It may include email messages documents journals multimedia objects etc name may be misleading since some objects can be highly structured However entire possible object collection does not fit into predefined structured framework Most established DBMSs now support unstructured data in various ways new dedicated DBMSs are emerging Database interaction Database management system Connolly Begg define Database Management System DBMS as software system that enables users define create maintain control access database DBMS acronym sometime extended indicated underlying database model with RDBMS relational OODBMS ORDBMS object orientated model ORDBMS Object Relational Other extensions can indicate some other characteristic such as DDBMS distributed database management systems functionality provided by DBMS can vary enormously core functionality storage retrieval update data Codd proposed following functions services fully fledged general purpose DBMS should provide Data storage retrieval update User accessible catalog data dictionary describing metadata Support transactions concurrency Facilities recovering database should it become damaged Support authorization access update data Access support from remote locations Enforcing constraints ensure data in database abides by certain rules It also generally be expected DBMS will provide set utilities such purposes as may be necessary administer database effectively including import export monitoring defragmentation analysis utilities core part DBMS interacting between database application interface sometimes referred as database engine Often DBMSs will have configuration parameters that can be statically dynamically tuned example maximum amount main memory on server database can use trend minimise amount manual configuration cases such as embedded databases need target zero administration paramount large major enterprise DBMSs have tended increase in size functionality can have involved thousands human years development effort through lifetime Early multi user DBMS typically only allowed application reside on same computer with access via terminals terminal emulation software client server architecture was development application resided on client desktop database on server allowing processing be distributed This evolved into multitier architecture incorporating application servers web servers with end user interface via web browser with database only directly connected adjacent tier general purpose DBMS will provide public application programming interfaces API optionally processor database languages such as SQL allow applications be written interact with database special purpose DBMS may use private API be specifically customised linked single application example an email system performing many functions general purpose DBMS such as message insertion message deletion attachment handling blocklist lookup associating messages an email address so forth however these functions are limited required handle email Application External interaction with database will be via an application program that interfaces with DBMS This can range from database tool that allows users execute SQL queries textually graphically web site that happens use database store search information Application Program Interface programmer will code interactions database sometimes referred as datasource via an application program interface API via database language particular API language chosen will need be supported by DBMS possible indirectly via pre processor bridging API Some API s aim be database independent ODBC being commonly known example Other common API s include JDBC ADO NET Database languages Database languages are special purpose languages which allow one more following tasks sometimes distinguished as sublanguages Data control language DCL controls access data Data definition language DDL defines data types such as creating altering dropping tables relationships among them Data manipulation language DML performs tasks such as inserting updating deleting data occurrences Data query language DQL allows searching information computing derived information Database languages are specific particular data model Notable examples include SQL combines roles data definition data manipulation query in single language It was one first commercial languages relational model although it departs in some respects from relational model as described by Codd example rows columns table can be ordered SQL became standard American National Standards Institute ANSI in International Organization Standardization ISO in standards have been regularly enhanced since supported with varying degrees conformance by all mainstream commercial relational DBMSs OQL an object model language standard from Object Data Management Group It has influenced design some newer query languages like JDOQL EJB QL XQuery standard XML query language implemented by XML database systems such as MarkLogic eXist by relational databases with XML capability such as Oracle DB also by in memory XML processors such as Saxon SQL XML combines XQuery with SQL database language may also incorporate features like DBMS specific configuration storage engine management Computations modify query results like counting summing averaging sorting grouping cross referencing Constraint enforcement e g in an automotive database only allowing one engine type per car Application programming interface version query language programmer convenience Storage Main articles Computer data storage Database engine Database storage container physical materialization database It comprises internal physical level in database architecture It also contains all information needed e g metadata data about data internal data structures reconstruct conceptual level external level from internal level needed Putting data into permanent storage generally responsibility database engine k storage engine Though typically accessed by DBMS through underlying operating system often using operating systems file systems as intermediates storage layout storage properties configuration setting are extremely important efficient operation DBMS thus are closely maintained by database administrators DBMS while in operation always has its database residing in several types storage e g memory external storage database data additional needed information possibly in very large amounts are coded into bits Data typically reside in storage in structures that look completely different from way data look in conceptual external levels but in ways that attempt optimize best possible these levels reconstruction needed by users programs as well as computing additional types needed information from data e g querying database Some DBMSs support specifying which character encoding was used store data so multiple encodings can be used in same database Various low level database storage structures are used by storage engine serialize data model so it can be written medium choice Techniques such as indexing may be used improve performance Conventional storage row oriented but are also column oriented correlation databases Materialized views Main article Materialized view Often storage redundancy employed increase performance common example storing materialized views which consist frequently needed external views query results Storing such views saves expensive computing them each time they are needed downsides materialized views are overhead incurred updating them keep them synchronized with original updated database data cost storage redundancy Replication Main article Database replication Occasionally database employs storage redundancy by database objects replication with one more copies increase data availability both improve performance simultaneous multiple end user accesses same database object provide resiliency in case partial failure distributed database Updates replicated object need be synchronized across object copies In many cases entire database replicated Security This article appears contradict article Database security Please see discussion on linked talk page March Learn remove this template message Main article Database security Database security deals with all various aspects protecting database content its owners its users It ranges from protection from intentional unauthorized database uses unintentional database accesses by unauthorized entities e g person computer program Database access control deals with controlling person certain computer program allowed access information in database information may comprise specific database objects e g record types specific records data structures certain computations over certain objects e g query types specific queries using specific access paths former e g using specific indexes other data structures access information Database access controls are set by special authorized by database owner personnel that uses dedicated protected security DBMS interfaces This may be managed directly on an individual basis by assignment individuals privileges groups in most elaborate models through assignment individuals groups roles which are then granted entitlements Data security prevents unauthorized users from viewing updating database Using passwords users are allowed access entire database subsets it called subschemas example an employee database can contain all data about an individual employee but one group users may be authorized view only payroll data while others are allowed access only work history medical data If DBMS provides way interactively enter update database as well as interrogate it this capability allows managing personal databases Data security in general deals with protecting specific chunks data both physically i e from corruption destruction removal e g see physical security interpretation them parts them meaningful information e g by looking at strings bits that they comprise concluding specific valid credit card numbers e g see data encryption Change access logging records accessed which attributes was changed it was changed Logging services allow forensic database audit later by keeping record access occurrences changes Sometimes application level code used record changes rather than leaving this database Monitoring can be set up attempt detect security breaches Transactions concurrency Further information Concurrency control Database transactions can be used introduce some level fault tolerance data integrity after recovery from crash database transaction unit work typically encapsulating number operations over database e g reading database object writing acquiring lock etc an abstraction supported in database also other systems Each transaction has well defined boundaries in terms which program code executions are included in that transaction determined by transaction s programmer via special transaction commands acronym ACID describes some ideal properties database transaction atomicity consistency isolation durability Migration See also Data migration Database migration database built with one DBMS not portable another DBMS i e other DBMS cannot run it However in some situations it desirable migrate database from one DBMS another reasons are primarily economical different DBMSs may have different total costs ownership TCOs functional operational different DBMSs may have different capabilities migration involves database s transformation from one DBMS type another transformation should maintain if possible database related application i e all related application programs intact Thus database s conceptual external architectural levels should be maintained in transformation It may be desired that also some aspects architecture internal level are maintained complex large database migration may be complicated costly one time project by itself which should be factored into decision migrate This in spite fact that tools may exist help migration between specific DBMSs Typically DBMS vendor provides tools help importing databases from other popular DBMSs Building maintaining tuning Main article Database tuning After designing database an application next stage building database Typically an appropriate general purpose DBMS can be selected be used this purpose DBMS provides needed user interfaces be used by database administrators define needed application s data structures within DBMS s respective data model Other user interfaces are used select needed DBMS parameters like security related storage allocation parameters etc database ready all its data structures other needed components are defined it typically populated with initial application s data database initialization which typically distinct project in many cases using specialized DBMS interfaces that support bulk insertion before making it operational In some cases database becomes operational while empty application data data are accumulated during its operation After database created initialised populated it needs be maintained Various database parameters may need changing database may need be tuned tuning better performance application s data structures may be changed added new related application programs may be written add application s functionality etc Backup restore Main article Backup Sometimes it desired bring database back previous state many reasons e g cases database found corrupted due software error if it has been updated with erroneous data achieve this backup operation done occasionally continuously each desired database state i e values its data embedding in database s data structures kept within dedicated backup files many techniques exist do this effectively it decided by database administrator bring database back this state e g by specifying this state by desired point in time database was in this state these files are used restore that state Static analysis Static analysis techniques software verification can be applied also in scenario query languages In particular Abstract interpretation framework has been extended field query languages relational databases as way support sound approximation techniques semantics query languages can be tuned according suitable abstractions concrete domain data abstraction relational database system has many interesting applications in particular security purposes such as fine grained access control watermarking etc Miscellaneous features Other DBMS features might include Database logs This helps in keeping history executed functions Graphics component producing graphs charts especially in data warehouse system Query optimizer Performs query optimization on every query choose an efficient query plan partial order tree operations be executed compute query result May be specific particular storage engine Tools hooks database design application programming application program maintenance database performance analysis monitoring database configuration monitoring DBMS hardware configuration DBMS related database may span computers networks storage units related database mapping especially distributed DBMS storage allocation database layout monitoring storage migration etc Increasingly are calls single system that incorporates all these core functionalities into same build test deployment framework database management source control Borrowing from other developments in software industry some market such offerings as DevOps database Design modeling Main article Database design first task database designer produce conceptual data model that reflects structure information be held in database common approach this develop an entity relationship model often with aid drawing tools Another popular approach Unified Modeling Language successful data model will accurately reflect possible state external world being modeled example if people can have more than one phone number it will allow this information be captured Designing good conceptual data model requires good understanding application domain it typically involves asking deep questions about things interest an organization like can customer also be supplier if product sold with two different forms packaging are those same product different products if plane flies from New York Dubai via Frankfurt that one flight two maybe even three answers these questions establish definitions terminology used entities customers products flights flight segments relationships attributes Producing conceptual data model sometimes involves input from business processes analysis workflow in organization This can help establish information needed in database can be left out example it can help deciding whether database needs hold historic data as well as current data Having produced conceptual data model that users are happy with next stage translate this into schema that implements relevant data structures within database This process often called logical database design output logical data model expressed in form schema Whereas conceptual data model in theory at least independent choice database technology logical data model will be expressed in terms particular database model supported by chosen DBMS terms data model database model are often used interchangeably but in this article we use data model design specific database database model modeling notation used express that design most popular database model general purpose databases relational model more precisely relational model as represented by SQL language process creating logical database design using this model uses methodical approach known as normalization goal normalization ensure that each elementary fact only recorded in one place so that insertions updates deletions automatically maintain consistency final stage database design make decisions that affect performance scalability recovery security like which depend on particular DBMS This often called physical database design output physical data model key goal during this stage data independence meaning that decisions made performance optimization purposes should be invisible end users applications are two types data independence Physical data independence logical data independence Physical design driven mainly by performance requirements requires good knowledge expected workload access patterns deep understanding features offered by chosen DBMS Another aspect physical database design security It involves both defining access control database objects as well as defining security levels methods data itself Models Main article Database model Collage five types database models database model type data model that determines logical structure database fundamentally determines in which manner data can be stored organized manipulated most popular example database model relational model SQL approximation relational which uses table based format Common logical data models databases include Navigational databases Hierarchical database model Network model Graph database Relational model Entity relationship model Enhanced entity relationship model Object model Document model Entity attribute value model Star schema An object relational database combines two related structures Physical data models include Inverted index Flat file Other models include Associative model Multidimensional model Array model Multivalue model Specialized models are optimized particular types data XML database Semantic model Content store Event store Time series model External conceptual internal views Traditional view data database management system provides three views database data external level defines each group end users sees organization data in database single database can have any number views at external level conceptual level unifies various external views into compatible global view It provides synthesis all external views It out scope various database end users rather interest database application developers database administrators internal level physical level internal organization data inside DBMS It concerned with cost performance scalability other operational matters It deals with storage layout data using storage structures such as indexes enhance performance Occasionally it stores data individual views materialized views computed from generic data if performance justification exists such redundancy It balances all external views performance requirements possibly conflicting in an attempt optimize overall performance across all activities While typically only one conceptual logical physical internal view data can be any number different external views This allows users see database information in more business related way rather than from technical processing viewpoint example financial department company needs payment details all employees as part company s expenses but does not need details about employees that are interest human resources department Thus different departments need different views company s database three level database architecture relates concept data independence which was one major initial driving forces relational model idea that changes made at certain level do not affect view at higher level example changes in internal level do not affect application programs written using conceptual level interfaces which reduces impact making physical changes improve performance conceptual view provides level indirection between internal external On one hand it provides common view database independent different external view structures on other hand it abstracts away details data are stored managed internal level In principle every level even every external view can be presented by different data model In practice usually given DBMS uses same data model both external conceptual levels e g relational model internal level which hidden inside DBMS depends on its implementation requires different level detail uses its own types data structure types Separating external conceptual internal levels was major feature relational database model implementations that dominate st century databases Research Database technology has been an active research topic since s both in academia in research development groups companies example IBM Research Research activity includes theory development prototypes Notable research topics have included models atomic transaction concept related concurrency control techniques query languages query optimization methods RAID more database research area has several dedicated academic journals example ACM Transactions on Database Systems TODS Data Knowledge Engineering DKE annual conferences e g ACM SIGMOD ACM PODS VLDB IEEE ICDE See also topical guide this subject see Outline databases Book Databases Comparison database tools Comparison object database management systems Comparison object relational database management systems Comparison relational database management systems Data hierarchy Data bank Data store Database theory Database testing Database centric architecture Journal Database Management Question focused dataset Notes This article quotes development time years involving people DB release alone Chong et al References Ullman Widom p Update Definition update by Merriam Webster merriam webster com Retrieval Definition retrieval by Merriam Webster merriam webster com Administration Definition administration by Merriam Webster merriam webster com Tsitchizris Lochovsky Beynon Davies Nelson Nelson Bachman TOPDB Top Database index pypl github io database n OED Online Oxford University Press June Retrieved July Subscription required IBM Corporation October IBM Information Management System IMS Transaction Database Servers delivers high performance low total cost ownership Retrieved Feb Codd Hershey Easthope North Childs Childs b MICRO Information Management System Version Reference Manual M Kahn D L Rumelhart B L Bronson October Institute Labor Industrial Relations ILIR University Michigan Wayne State University Oracle th Anniversary Timeline PDF Retrieved August Interview with Wayne Ratliff FoxPro History Retrieved on Development an object oriented DBMS Portland Oregon United States Pages ISBN Graves Steve COTS Databases Embedded Systems Archived at Wayback Machine Embedded Computing Design magazine January Retrieved on August Argumentation in Artificial Intelligence by Iyad Rahwan Guillermo R Simari OWL DL Semantics Retrieved December Connolly Begg p Connolly Begg pp Connolly Begg p Connolly Begg pp Connolly Begg p Chapple Structured Query Language SQL International Business Machines October Retrieved Wagner Halder Cortesi Ben Linders January Database Administration Fits into DevOps Retrieved April itl nist gov Integration Definition Information Modeling IDEFIX Archived at Wayback Machine December b Date pp Sources Bachman Charles W Programmer as Navigator Communications ACM doi Beynon Davies Paul Database Systems rd ed Palgrave Macmillan ISBN Chapple Mike SQL Fundamentals Databases About com Archived from original on February Retrieved January Childs David L Description set theoretic data structure PDF CONCOMP Research in Conversational Use Computers Project Technical Report University Michigan Childs David L b Feasibility set theoretic data structure general structure based on reconstituted definition PDF CONCOMP Research in Conversational Use Computers Project Technical Report University Michigan Chong Raul F Wang Xiaomei Dang Michael Snow Dwaine R Introduction DB Understanding DB Learning Visually with Examples nd ed ISBN Retrieved March Codd Edgar F Relational Model Data Large Shared Data Banks PDF Communications ACM doi Connolly Thomas M Begg Carolyn E Database Systems Practical Approach Design Implementation Management th ed Pearson ISBN Date C J An Introduction Database Systems th ed Pearson ISBN Halder Raju Cortesi Agostino Abstract Interpretation Database Query Languages PDF Computer Languages Systems Structures doi j cl ISSN Hershey William Easthope Carol set theoretic data structure retrieval language Spring Joint Computer Conference May ACM SIGIR Forum pp doi Nelson Anne Fulcher Nelson William Harris Morehead Building Electronic Commerce With Web Database Constructions Prentice Hall ISBN North Ken March Sets Data Models Data Independence Dr Dobb s Archived from original on October Tsitchizris Dionysios C Lochovsky Fred H Data Models Prentice Hall ISBN Ullman Jeffrey Widom Jennifer First Course in Database Systems Prentice Hall ISBN Wagner Michael SQL XML Evaluierung der Standardkonformit t ausgew hlter Datenbanksysteme Diplomica Verlag ISBN Further reading Ling Liu Tamer M zsu Eds Encyclopedia Database Systems p illus ISBN Gray J Reuter Transaction Processing Concepts Techniques st edition Morgan Kaufmann Publishers Kroenke David M David J Auer Database Concepts rd ed New York Prentice Raghu Ramakrishnan Johannes Gehrke Database Management Systems Abraham Silberschatz Henry F Korth S Sudarshan Database System Concepts Lightstone S Teorey T Nadeau T Physical Database Design database professional s guide exploiting indexes views storage more Morgan Kaufmann Press ISBN Teorey T Lightstone S Nadeau T Database Modeling Design Logical Design th edition Morgan Kaufmann Press ISBN External links Databaseat Wikipedia s sister projects Definitions from Wiktionary Media from Wikimedia Commons News from Wikinews Quotations from Wikiquote Texts from Wikisource Textbooks from Wikibooks Resources from Wikiversity DB File extension information about files with DB extension Links related articles v t e Computer science Note This template roughly follows ACM Computing Classification System Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Real time computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations tools Programming paradigm Programming language Compiler Domain specific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Open source model Theory computation Model computation Formal language Automata theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Human computer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation reasoning Computer vision Automated planning scheduling Search methodology Control method Philosophy artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multi task learning Cross validation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing E commerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Outline WikiProject Commons v t e Database Main Requirements Theory Models Database management system Machine Server Application Connection datasource DSN Administrator Lock Types Tools Languages Data definition Data manipulation Query information retrieval Security Activity monitoring Audit Forensics Negative database Design Entities relationships Enhanced notation Normalization Refactoring Cardinality Programming Abstraction layer Object relational mapping Management Virtualization Tuning caching Migration Preservation Integrity See also Database centric architecture Intelligent database Two phase locking Locks with ordered sharing Load file Publishing Halloween Problem Log shipping Book Category WikiProject v t e Database management systems Types Object oriented comparison Relational comparison Document oriented Graph NoSQL NewSQL Concepts Database ACID Armstrong s axioms CAP theorem CRUD Null Candidate key Foreign key Superkey Surrogate key Unique key Objects Relation table column row View Transaction Transaction log Trigger Index Stored procedure Cursor Partition Components Concurrency control Data dictionary JDBC XQJ ODBC Query language Query optimizer Query rewriting system Query plan Functions Administration Query optimization Replication Related topics Database models Database normalization Database storage Distributed database Federated database system Referential integrity Relational algebra Relational calculus Relational database Relational model Object relational database Transaction processing v t e Data warehouses Creating data warehouse Concepts Database Dimension Dimensional modeling Fact OLAP Star schema Snowflake schema Reverse star schema Aggregate Variants Anchor modeling Column oriented DBMS Data vault modeling HOLAP MOLAP ROLAP Operational data store Elements Data dictionary Metadata Data mart Sixth normal form Surrogate key Fact Fact table Early arriving fact Measure Dimension Dimension table Degenerate Slowly changing Filling Extract Transform Load ETL Extract Transform Load Using data warehouse Concepts Business intelligence Dashboard Data mining Decision support system DSS OLAP cube Data warehouse automation Languages Data Mining Extensions DMX MultiDimensional eXpressions MDX XML Analysis XMLA Tools Business intelligence software Reporting software Spreadsheet Related People Bill Inmon Ralph Kimball Products Comparison OLAP servers Data warehousing products producers v t e Semantic Web Background Databases Hypertext Internet Ontologies Semantics Semantic networks World Wide Web Sub topics Dataspaces Hyperdata Linked data Rule based systems Applications Semantic analytics Semantic broker Semantic computing Semantic mapper Semantic matching Semantic publishing Semantic reasoner Semantic search Semantic service oriented architecture Semantic wiki Related topics Collective intelligence Description logic Folksonomy Geotagging Information architecture Knowledge extraction Knowledge management Knowledge representation reasoning Library Digital library Digital humanities Metadata References Topic map Web Web engineering Web Science Trust Standards Syntax supporting technologies HTTP IRI URI RDF triples RDF XML JSON LD Turtle TriG Notation N Triples TriX no W C standard RRID SPARQL XML Semantic HTML Schemas ontologies rules Common Logic OWL RDFS Rule Interchange Format Semantic Web Rule Language ALPS SHACL Semantic annotation eRDF GRDDL Microdata Microformats RDFa SAWSDL Facebook Platform Common vocabularies DOAP Dublin Core FOAF Schema org SIOC SKOS Microformat vocabularies hAtom hCalendar hCard hProduct hRecipe hResume hReview v t e Systems science Systems types Anatomical Art Biological Complex Complex adaptive Conceptual Coupled human environment Database Dynamical Ecological Economic Energy Formal Holarchic Information Legal Measurement Metric Multi agent Nervous Nonlinear Operating Physical Planetary Political Sensory Social Star Writing Concepts Doubling time Leverage points Limiting factor Negative feedback Positive feedback Theoretical fields Chaos theory Complex systems Control theory Cybernetics Earth system science Living systems Sociotechnical system Systemics Urban metabolism World systems theory Analysis Biology Dynamics Ecology Engineering Neuroscience Pharmacology Psychology Theory Thinking Systems scientists Alexander Bogdanov Russell L Ackoff William Ross Ashby Ruzena Bajcsy B la H B n thy Gregory Bateson Anthony Stafford Beer Richard E Bellman Ludwig von Bertalanffy Margaret Boden Kenneth E Boulding Murray Bowen Kathleen Carley Mary Cartwright C West Churchman Manfred Clynes George Dantzig Edsger W Dijkstra Fred Emery Heinz von Foerster Stephanie Forrest Jay Wright Forrester Barbara Grosz Charles S Hall Mike Jackson Lydia Kavraki James J Kay Faina M Kirillova George Klir Allenna Leonard Edward Norton Lorenz Niklas Luhmann Humberto Maturana Margaret Mead Donella Meadows Mihajlo D Mesarovic James Grier Miller Radhika Nagpal Howard T Odum Talcott Parsons Ilya Prigogine Qian Xuesen Anatol Rapoport John Seddon Peter Senge Claude Shannon Katia Sycara Eric Trist Francisco Varela Manuela M Veloso Kevin Warwick Norbert Wiener Jennifer Wilby Anthony Wilden Applications Systems theory in anthropology Systems theory in archaeology Systems theory in political science Organizations List Principia Cybernetica Category Portal Commons Authority control GND LCCN sh NARA NDL Retrieved from https en wikipedia org w index php title Database oldid Categories Database management systems Databases Hidden categories Pages containing links subscription only content Webarchive template wayback links Articles containing potentially dated statements from All articles containing potentially dated statements All articles with unsourced statements Articles with unsourced statements from March Articles containing potentially dated statements from Articles with unsourced statements from May Articles needing additional references from March All articles needing additional references Articles contradicting other articles CS long volume value Wikipedia articles with GND identifiers Wikipedia articles with LCCN identifiers Wikipedia articles with NARA identifiers Wikipedia articles with NDL identifiers Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read View source View history More Search Navigation Main page Contents Featured content Current events Random article Donate Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page In other projects Wikimedia Commons Wikiversity Print export Create book Download as PDF Printable version Languages Afrikaans Aragon s Asturianu Az rbaycanca Boarisch Bosanski Brezhoneg Catal e tina Cymraeg Dansk Deutsch Eesti Espa ol Esperanto Euskara Fran ais Frysk Gaeilge Galego Hrvatski Ido Bahasa Indonesia Interlingua slenska Italiano Jawa Kiswahili Kurd Latina Latvie u Lietuvi Lingua Franca Nova Lumbaart Magyar Bahasa Melayu Mirand s Nederlands Norsk Norsk nynorsk Occitan O zbekcha Polski Portugu s Rom n Scots Seeltersk Shqip Sicilianu Simple English Sloven ina Sloven ina srpski Srpskohrvatski Suomi Svenska Tagalog tatar T rk e Ti ng Vi t Walon Winaray Edit links This page was last edited on September at UTC Text available under Creative Commons Attribution ShareAlike License additional terms may apply By using this site agree Terms Use Privacy Policy Wikipedia registered trademark Wikimedia Foundation Inc non profit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Statistics Cookie statement Mobile view